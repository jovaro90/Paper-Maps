{
  "version": 3,
  "sources": ["../../isa.js/IsA.js", "../../hashed/lib/util.js", "../../hashed/lib/serializers.js", "../../hashed/lib/deserializers.js", "../../hashed/lib/field.js", "../../hashed/lib/schema.js", "../../hashed/lib/store.js", "../../hashed/lib/hash.js", "../../hashed/lib/main.js", "../../ol-hashed/index.js"],
  "sourcesContent": ["var boolTag = \"[object Boolean]\",\r\n\tdateTag = \"[object Date]\",\r\n\terrorTag = \"[object Error]\",\r\n\tfuncTag = \"[object Function]\",\r\n\tafuncTag = \"[object AsyncFunction]\",\r\n\tnumberTag = \"[object Number]\",\r\n\tobjectTag = \"[object Object]\",\r\n\tregexpTag = \"[object RegExp]\",\r\n\tstringTag = \"[object String]\";\r\n\r\nvar objectProto = Object.prototype;\r\n\r\nvar objToString = objectProto.toString;\r\nvar fnToString = Function.prototype.toString;\r\nvar objCtorString = fnToString.call(Object);\r\n\r\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/gm;\r\nvar ARGUMENT_NAMES = /([^\\s,]+)/g;\r\n\r\nvar NAME_PATTERN = /([\\\\.A-Za-z]+)/g;\r\n\r\nlet Services = {\r\n\tgetPrototypeOf: Object.getPrototypeOf,\r\n\tisHostObject: function (value) {\r\n\t\tvar result = false;\r\n\t\tif (value !== null && typeof value.toString !== \"function\") {\r\n\t\t\ttry {\r\n\t\t\t\tresult = !!(value + \"\");\r\n\t\t\t} catch (e) {}\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\tisDefined(value) {\r\n\t\treturn value !== undefined && value !== null;\r\n\t},\r\n\tisIterable(obj) {\r\n\t\tif (!Services.isDefined(obj)) return false;\r\n\r\n\t\treturn typeof obj[Symbol.iterator] === \"function\";\r\n\t},\r\n\tisPromise(p) {\r\n\t\treturn p && Object.prototype.toString.call(p) === \"[object Promise]\";\r\n\t},\r\n\tisPlainObject: function (value) {\r\n\t\tif (\r\n\t\t\t!this.isObjectLike(value) ||\r\n\t\t\tobjToString.call(value) !== objectTag ||\r\n\t\t\tthis.isHostObject(value)\r\n\t\t) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar proto =\r\n\t\t\ttypeof value.constructor === \"function\"\r\n\t\t\t\t? this.getPrototypeOf(value)\r\n\t\t\t\t: objectProto;\r\n\r\n\t\tif (proto === null) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tvar Ctor = proto.constructor;\r\n\t\treturn (\r\n\t\t\ttypeof Ctor === \"function\" &&\r\n\t\t\tCtor instanceof Ctor &&\r\n\t\t\tfnToString.call(Ctor) === objCtorString\r\n\t\t);\r\n\t},\r\n\tisObjectLike: function (value) {\r\n\t\treturn !!value && typeof value === \"object\";\r\n\t},\r\n\tisArray: Array.isArray,\r\n\tisObject: function (value) {\r\n\t\tvar type = typeof value;\r\n\t\treturn !!value && (type === \"object\" || type === \"function\");\r\n\t},\r\n\tisError: function (value) {\r\n\t\treturn (\r\n\t\t\tthis.isObjectLike(value) &&\r\n\t\t\ttypeof value.message === \"string\" &&\r\n\t\t\tobjToString.call(value) === errorTag\r\n\t\t);\r\n\t},\r\n\tisNumber: function (value) {\r\n\t\treturn (\r\n\t\t\ttypeof value === \"number\" ||\r\n\t\t\t(this.isObjectLike(value) && objToString.call(value) === numberTag)\r\n\t\t);\r\n\t},\r\n\tisDate: function (value) {\r\n\t\treturn this.isObjectLike(value) && objToString.call(value) === dateTag;\r\n\t},\r\n\tisFunction: function (value) {\r\n\t\treturn (\r\n\t\t\tthis.isObject(value) &&\r\n\t\t\t(objToString.call(value) === funcTag ||\r\n\t\t\t\tobjToString.call(value) === afuncTag)\r\n\t\t);\r\n\t},\r\n\tisSyncFunction: function (value) {\r\n\t\treturn this.isObject(value) && objToString.call(value) === funcTag;\r\n\t},\r\n\tisAsyncFunction: function (value) {\r\n\t\treturn this.isObject(value) && objToString.call(value) === afuncTag;\r\n\t},\r\n\tisBoolean: function (value) {\r\n\t\treturn (\r\n\t\t\tvalue === true ||\r\n\t\t\tvalue === false ||\r\n\t\t\t(this.isObjectLike(value) && objToString.call(value) === boolTag)\r\n\t\t);\r\n\t},\r\n\tisString: function (value) {\r\n\t\treturn (\r\n\t\t\ttypeof value === \"string\" ||\r\n\t\t\t(this.isObjectLike(value) && objToString.call(value) === stringTag)\r\n\t\t);\r\n\t},\r\n\tisRegExp: function (value) {\r\n\t\treturn this.isObject(value) && objToString.call(value) === regexpTag;\r\n\t},\r\n\tisPrimitive: function (value) {\r\n\t\treturn (\r\n\t\t\tServices.isString(value) ||\r\n\t\t\tServices.isBoolean(value) ||\r\n\t\t\tServices.isNumber(value) ||\r\n\t\t\tServices.isDate(value)\r\n\t\t);\r\n\t},\r\n\twalk: function (object, path, defaultValue) {\r\n\t\tif (!path) return defaultValue;\r\n\r\n\t\tlet oPath = Array.isArray(path) ? path : path.split(\".\");\r\n\r\n\t\tif (!object && oPath.length === 0) return true;\r\n\t\tfor (let key of oPath) {\r\n\t\t\tif (!object || !object[key]) return defaultValue;\r\n\t\t\tobject = object[key];\r\n\t\t}\r\n\t\treturn object || defaultValue;\r\n\t},\r\n\tisValidPath: function (object, path) {\r\n\t\treturn !!Services.walk(object, path, null);\r\n\t},\r\n\tparameterNames: function (func) {\r\n\t\tvar fnStr = func.toString().replace(STRIP_COMMENTS, \"\");\r\n\t\tvar result = fnStr\r\n\t\t\t.slice(fnStr.indexOf(\"(\") + 1, fnStr.indexOf(\")\"))\r\n\t\t\t.match(ARGUMENT_NAMES);\r\n\t\tif (result === null) result = [];\r\n\t\tresult = result.map((p) => {\r\n\t\t\tvar index = p.indexOf(\"=\");\r\n\t\t\treturn index === -1 ? p : p.substring(0, index);\r\n\t\t});\r\n\t\tresult = result.filter((p) => {\r\n\t\t\treturn p.length > 0 && p.match(NAME_PATTERN);\r\n\t\t});\r\n\t\treturn result;\r\n\t},\r\n\tpick: function (object, predicate, ignore, target) {\r\n\t\tif (!object) return {};\r\n\r\n\t\tif (!predicate) predicate = Object.keys(object);\r\n\t\telse if (!Array.isArray(predicate)) predicate = Object.keys(predicate);\r\n\r\n\t\tif (!ignore) ignore = [];\r\n\t\telse if (!Array.isArray(ignore)) ignore = Object.keys(ignore);\r\n\r\n\t\tlet res = target || {};\r\n\t\tfor (let key of predicate)\r\n\t\t\tif (!ignore.includes(key) && object.hasOwnProperty(key))\r\n\t\t\t\tres[key] = object[key];\r\n\t\treturn res;\r\n\t},\r\n\tfunctionsOf(obj, asyncOnly = false) {\r\n\t\tlet res = [];\r\n\t\tif (!obj) return res;\r\n\r\n\t\tfor (let m in obj)\r\n\t\t\tif (\r\n\t\t\t\tobj[m] &&\r\n\t\t\t\t(asyncOnly\r\n\t\t\t\t\t? this.isAsyncFunction(obj[m])\r\n\t\t\t\t\t: this.isFunction(obj[m]))\r\n\t\t\t)\r\n\t\t\t\tres.push(obj[m]);\r\n\t\treturn res;\r\n\t},\r\n\tfunctionNames(obj, asyncOnly = false) {\r\n\t\tlet res = [];\r\n\t\tif (!obj) return res;\r\n\r\n\t\tfor (let m in obj)\r\n\t\t\tif (\r\n\t\t\t\tobj[m] &&\r\n\t\t\t\t(asyncOnly\r\n\t\t\t\t\t? this.isAsyncFunction(obj[m])\r\n\t\t\t\t\t: this.isFunction(obj[m]))\r\n\t\t\t)\r\n\t\t\t\tres.push(m);\r\n\t\treturn res;\r\n\t},\r\n};\r\n\r\nmodule.exports = Services;\r\n", "const isa = require('isa.js');\r\n\r\n/**\r\n * Get the type of a value.\r\n * @param {*} value The value.\r\n * @return {string} The type.\r\n */\r\nexports.typeOf = function typeOf(value) {\r\n  let type = typeof value;\r\n  if (type === 'object') {\r\n    if (value === null) {\r\n      type = 'null';\r\n    } else if (isa.isArray(value)) {\r\n      type = 'array';\r\n    } else if (isa.isDate(value)) {\r\n      type = 'date';\r\n    } else if (isa.isRegExp(value)) {\r\n      type = 'regexp';\r\n    } else if (isa.isError(value)) {\r\n      type = 'error';\r\n    }\r\n  }\r\n  return type;\r\n};\r\n\r\n/**\r\n * Copy properties from one object to another.\r\n * @param {Object} dest The destination object.\r\n * @param {Object} source The source object.\r\n * @return {Object} The destination object.\r\n */\r\nexports.extend = function(dest, source) {\r\n  for (const key in source) {\r\n    dest[key] = source[key];\r\n  }\r\n  return dest;\r\n};\r\n\r\n/**\r\n * Generate an array of alternating name, value from an object's properties.\r\n * @param {Object} object The object to zip.\r\n * @return {Array} The array of name, value [, name, value]*.\r\n */\r\nexports.zip = function(object) {\r\n  const zipped = [];\r\n  let count = 0;\r\n  for (const key in object) {\r\n    zipped[2 * count] = key;\r\n    zipped[2 * count + 1] = object[key];\r\n    ++count;\r\n  }\r\n  return zipped;\r\n};\r\n\r\n/**\r\n * Generate an object from an array of alternating name, value items.\r\n * @param {Array} array The array of name, value [, name, value]*.\r\n * @return {Object} The zipped up object.\r\n */\r\nexports.unzip = function(array) {\r\n  const object = {};\r\n  for (let i = 0, ii = array.length; i < ii; i += 2) {\r\n    object[array[i]] = array[i + 1];\r\n  }\r\n  return object;\r\n};\r\n", "const isa = require('isa.js');\r\n\r\nconst enc = encodeURIComponent;\r\n\r\nconst serializers = {\r\n  string: function(str) {\r\n    if (typeof str !== 'string') {\r\n      throw new Error('Expected string to serialize: ' + str);\r\n    }\r\n    return enc(str);\r\n  },\r\n  number: function(num) {\r\n    if (typeof num !== 'number') {\r\n      throw new Error('Expected number to serialize: ' + num);\r\n    }\r\n    return enc(String(num));\r\n  },\r\n  boolean: function(bool) {\r\n    if (typeof bool !== 'boolean') {\r\n      throw new Error('Expected boolean to serialize: ' + bool);\r\n    }\r\n    return bool ? '1' : '0';\r\n  },\r\n  date: function(date) {\r\n    if (!isa.isDate(date)) {\r\n      throw new Error('Expected date to serialize: ' + date);\r\n    }\r\n    return enc(date.toISOString());\r\n  },\r\n  array: function(array) {\r\n    if (!isa.isArray(array)) {\r\n      throw new Error('Expected array to serialize: ' + array);\r\n    }\r\n    return enc(JSON.stringify(array));\r\n  },\r\n  object: function(obj) {\r\n    return enc(JSON.stringify(obj));\r\n  }\r\n};\r\n\r\n/**\r\n * Get a serializer for a value of the given type.\r\n * @param {string} type Value type.\r\n * @return {function(*): string} Function that serializes a value to a string.\r\n */\r\nexports.get = function(type) {\r\n  if (!(type in serializers)) {\r\n    throw new Error('Unable to serialize type: ' + type);\r\n  }\r\n  return serializers[type];\r\n};\r\n", "const util = require('./util');\r\n\r\nconst dec = decodeURIComponent;\r\n\r\nconst noop = function() {};\r\n\r\nconst deserializers = {\r\n  string: function(str) {\r\n    if (!str || typeof str !== 'string') {\r\n      throw new Error('Expected string to deserialize: ' + str);\r\n    }\r\n    return dec(str);\r\n  },\r\n  number: function(str) {\r\n    if (!str || typeof str !== 'string') {\r\n      throw new Error('Expected string to deserialize: ' + str);\r\n    }\r\n    const num = Number(dec(str));\r\n    if (isNaN(num)) {\r\n      throw new Error('Expected to deserialize a number: ' + str);\r\n    }\r\n    return num;\r\n  },\r\n  boolean: function(str) {\r\n    if (!str || typeof str !== 'string') {\r\n      throw new Error('Expected string to deserialize: ' + str);\r\n    }\r\n    let bool;\r\n    if (str === '1') {\r\n      bool = true;\r\n    } else if (str === '0') {\r\n      bool = false;\r\n    } else {\r\n      throw new Error('Expected \"1\" or \"0\" for boolean: ' + str);\r\n    }\r\n    return bool;\r\n  },\r\n  date: function(str) {\r\n    if (!str || typeof str !== 'string') {\r\n      throw new Error('Expected string to deserialize: ' + str);\r\n    }\r\n    const date = new Date(dec(str));\r\n    if (isNaN(date.getTime())) {\r\n      throw new Error('Expected to deserialize a date: ' + str);\r\n    }\r\n    return date;\r\n  },\r\n  array: function(str) {\r\n    if (!str || typeof str !== 'string') {\r\n      throw new Error('Expected string to deserialize: ' + str);\r\n    }\r\n    let array;\r\n    try {\r\n      array = JSON.parse(dec(str));\r\n    } catch (err) {\r\n      noop();\r\n    }\r\n    if (!array || util.typeOf(array) !== 'array') {\r\n      throw new Error('Expected to deserialize an array: ' + str);\r\n    }\r\n    return array;\r\n  },\r\n  object: function(str) {\r\n    if (!str || typeof str !== 'string') {\r\n      throw new Error('Expected string to deserialize: ' + str);\r\n    }\r\n    let obj;\r\n    try {\r\n      obj = JSON.parse(dec(str));\r\n    } catch (err) {\r\n      noop();\r\n    }\r\n    if (!obj || util.typeOf(obj) !== 'object') {\r\n      throw new Error('Expected to deserialize an object: ' + str);\r\n    }\r\n    return obj;\r\n  }\r\n};\r\n\r\n/**\r\n * Get a deserializer for a value of the given type.\r\n * @param {string} type Value type.\r\n * @return {function(string): *} Function that deserializes a string to a value.\r\n */\r\nexports.get = function(type) {\r\n  if (!(type in deserializers)) {\r\n    throw new Error('Unable to deserialize type: ' + type);\r\n  }\r\n  return deserializers[type];\r\n};\r\n", "const util = require('./util');\r\n\r\nconst serializers = require('./serializers');\r\nconst deserializers = require('./deserializers');\r\n\r\n/**\r\n * Create a new field.  A field must have a default value (`default`) and is\r\n * capable of serializing and deserializing values.\r\n * @param {Object} config Field configuration.  Must have a `default` property\r\n *     with a default value.  May have optional `serialize` and `deserialize`\r\n *     functions.  As a shorthand for providing a config object with a `default`\r\n *     property, a default value may be provided directly.\r\n * @constructor\r\n */\r\nexports.Field = function(config) {\r\n  if (util.typeOf(config) !== 'object') {\r\n    this.default = config;\r\n  } else if (!('default' in config)) {\r\n    throw new Error('Missing default');\r\n  } else {\r\n    this.default = config.default;\r\n  }\r\n\r\n  const type = util.typeOf(this.default);\r\n  this.serialize = config.serialize || serializers.get(type);\r\n  this.deserialize = config.deserialize || deserializers.get(type);\r\n};\r\n", "const Field = require('./field').Field;\r\nconst util = require('./util');\r\n\r\n/**\r\n * Create a new schema.  A schema is a collection of field definitions.\r\n * @param {Object} config Keys are field names, values are field configs.\r\n * @constructor\r\n */\r\nconst Schema = (exports.Schema = function(config) {\r\n  config = util.extend({}, config);\r\n  const fields = {};\r\n  let prefix;\r\n  if ('_' in config) {\r\n    prefix = config._;\r\n    delete config._;\r\n  }\r\n  for (const key in config) {\r\n    fields[key] = new Field(config[key]);\r\n  }\r\n  this._prefix = prefix;\r\n  this._fields = fields;\r\n});\r\n\r\n/**\r\n * Get the prefixed version of a key.\r\n * @param {string} key The key.\r\n * @return {string} The prefixed key.\r\n */\r\nSchema.prototype.getPrefixed = function(key) {\r\n  return this._prefix ? this._prefix + '.' + key : key;\r\n};\r\n\r\n/**\r\n * Call a callback for each field key.\r\n * @param {function(string, number)} callback Called with a local field key and\r\n *     a prefixed key.\r\n * @param {Object} thisArg This argument for the callback.\r\n */\r\nSchema.prototype.forEachKey = function(callback, thisArg) {\r\n  let more;\r\n  for (const key in this._fields) {\r\n    more = callback.call(thisArg, key, this.getPrefixed(key));\r\n    if (more === false) {\r\n      return;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Serialize a value.\r\n * @param {string} key The key or field name.\r\n * @param {*} value The value to serialize.\r\n * @param {Object} values Additional values for providers to use when serializing.\r\n * @return {string} The serialized value.\r\n */\r\nSchema.prototype.serialize = function(key, value, values) {\r\n  if (!(key in this._fields)) {\r\n    throw new Error('Unknown key: ' + key);\r\n  }\r\n  return this._fields[key].serialize(value, values);\r\n};\r\n\r\n/**\r\n * Deserialize a value.\r\n * @param {string} key The key or field name.\r\n * @param {string} str The serialized value.\r\n * @return {*} The deserialized value.\r\n */\r\nSchema.prototype.deserialize = function(key, str) {\r\n  if (!(key in this._fields)) {\r\n    throw new Error('Unknown key: ' + key);\r\n  }\r\n  return this._fields[key].deserialize(str);\r\n};\r\n\r\n/**\r\n * Get the default value for a particular field.\r\n * @param {string} key The key or field name.\r\n * @return {*} The default value.\r\n */\r\nSchema.prototype.getDefault = function(key) {\r\n  if (!(key in this._fields)) {\r\n    throw new Error('Unknown key: ' + key);\r\n  }\r\n  return this._fields[key].default;\r\n};\r\n\r\n/**\r\n * Determine if one schema conflicts with another.  Two schemas conflict if\r\n * any of their prefixed keys are the same.\r\n * @param {Schema} other The other schema.\r\n * @return {boolean|string} This schema conflicts with the other.  If the two\r\n *     schemas conflict, the return will be the first conflicting key (with\r\n *     any prefix).\r\n */\r\nSchema.prototype.conflicts = function(other) {\r\n  const thisPrefixedKeys = {};\r\n  for (const key in this._fields) {\r\n    thisPrefixedKeys[this.getPrefixed(key)] = true;\r\n  }\r\n\r\n  let conflicts = false;\r\n  other.forEachKey(function(_, prefixed) {\r\n    if (prefixed in thisPrefixedKeys) {\r\n      conflicts = prefixed;\r\n    }\r\n    return !conflicts;\r\n  });\r\n  return conflicts;\r\n};\r\n", "const Schema = require('./schema').Schema;\r\nconst util = require('./util');\r\nconst serializers = require('./serializers');\r\n\r\n/**\r\n * An object backed store of string values.  Allows registering multiple state\r\n * providers.\r\n * @param {Object} values Initial serialized values.\r\n * @param {function(Object)} callback Called with an object of serialized\r\n *     values and defaults whenever a provider updates state.\r\n * @constructor\r\n */\r\nconst Store = (exports.Store = function(values, callback) {\r\n  this._values = values;\r\n  this._defaults = {};\r\n  this._providers = [];\r\n  this._callback = callback;\r\n  this._callbackTimer = null;\r\n});\r\n\r\nStore.prototype._scheduleCallback = function() {\r\n  if (this._callbackTimer) {\r\n    clearTimeout(this._callbackTimer);\r\n  }\r\n  this._callbackTimer = setTimeout(this._debouncedCallback.bind(this));\r\n};\r\n\r\nStore.prototype._debouncedCallback = function() {\r\n  this._callbackTimer = null;\r\n  this._callback(this._values, this._defaults);\r\n};\r\n\r\nStore.prototype.update = function(values) {\r\n  if (this._updateTimer) {\r\n    clearTimeout(this._updateTimer);\r\n  }\r\n  this._updateTimer = setTimeout(this._debouncedUpdate.bind(this, values));\r\n};\r\n\r\nStore.prototype._debouncedUpdate = function(newValues) {\r\n  this._updateTimer = null;\r\n  const values = this._values;\r\n  const providers = this._providers.slice(); // callbacks may unregister providers\r\n  for (let i = providers.length - 1; i >= 0; --i) {\r\n    const provider = providers[i];\r\n    const schema = provider.schema;\r\n    let changed = false;\r\n    const state = {};\r\n    schema.forEachKey(function(key, prefixed) {\r\n      let deserialized;\r\n      if (!(prefixed in newValues)) {\r\n        deserialized = schema.getDefault(key);\r\n        const serializedDefault = schema.serialize(key, deserialized);\r\n        if (values[prefixed] !== serializedDefault) {\r\n          changed = true;\r\n          values[prefixed] = serializedDefault;\r\n          state[key] = deserialized;\r\n        }\r\n      } else if (values[prefixed] !== newValues[prefixed]) {\r\n        try {\r\n          deserialized = schema.deserialize(key, newValues[prefixed]);\r\n          values[prefixed] = newValues[prefixed];\r\n          state[key] = deserialized;\r\n          changed = true;\r\n        } catch (err) {\r\n          // invalid value, pass\r\n        }\r\n      }\r\n    });\r\n    if (changed && this._providers.indexOf(provider) >= 0) {\r\n      provider.callback(state);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Unregister a provider.  Deletes the provider's values from the underlying\r\n * store and calls the store's callback.\r\n * @param {Function} callback The provider's callback.\r\n */\r\nStore.prototype.unregister = function(callback) {\r\n  let removedProvider;\r\n  this._providers = this._providers.filter(function(provider) {\r\n    const remove = provider.callback === callback;\r\n    if (remove) {\r\n      removedProvider = provider;\r\n    }\r\n    return !remove;\r\n  });\r\n  if (!removedProvider) {\r\n    throw new Error('Unable to unregister hashed state provider');\r\n  }\r\n  const values = this._values;\r\n  const defaults = this._defaults;\r\n  removedProvider.schema.forEachKey(function(key, prefixed) {\r\n    delete values[prefixed];\r\n    delete defaults[prefixed];\r\n  });\r\n  this._scheduleCallback();\r\n};\r\n\r\n/**\r\n * Register a new state provider.\r\n * @param {Object} config Schema config.\r\n * @param {function(Object)} callback Called by the store on state changes.\r\n * @return {function(Object)} Called by the provider on state changes.\r\n */\r\nStore.prototype.register = function(config, callback) {\r\n  const provider = {\r\n    schema: new Schema(config),\r\n    callback: callback\r\n  };\r\n\r\n  // ensure there are no conflicts with existing providers\r\n  for (let i = 0, ii = this._providers.length; i < ii; ++i) {\r\n    const conflicts = provider.schema.conflicts(this._providers[i].schema);\r\n    if (conflicts) {\r\n      throw new Error(\r\n        'Provider already registered using the same name: ' + conflicts\r\n      );\r\n    }\r\n    if (provider.callback === this._providers[i].callback) {\r\n      throw new Error('Provider already registered with the same callback');\r\n    }\r\n  }\r\n\r\n  this._providers.push(provider);\r\n  this._initializeProvider(provider);\r\n\r\n  return function update(state) {\r\n    if (this._providers.indexOf(provider) === -1) {\r\n      throw new Error('Unregistered provider attempting to update state');\r\n    }\r\n    const schema = provider.schema;\r\n    let changed = false;\r\n    const values = this._values;\r\n    schema.forEachKey(function(key, prefixed) {\r\n      if (key in state) {\r\n        const serializedValue = schema.serialize(key, state[key], state);\r\n        if (values[prefixed] !== serializedValue) {\r\n          changed = true;\r\n          values[prefixed] = serializedValue;\r\n        }\r\n      }\r\n    });\r\n    if (changed) {\r\n      this._scheduleCallback();\r\n    }\r\n  }.bind(this);\r\n};\r\n\r\n/**\r\n * Call provider with initial values.\r\n * @param {Object} provider Provider to be initialized.\r\n */\r\nStore.prototype._initializeProvider = function(provider) {\r\n  const state = {};\r\n  const defaults = {};\r\n  const values = this._values;\r\n  provider.schema.forEachKey(function(key, prefixed) {\r\n    let deserializedValue;\r\n    const deserializedDefault = provider.schema.getDefault(key);\r\n    const serializedDefault = provider.schema.serialize(\r\n      key,\r\n      deserializedDefault\r\n    );\r\n    if (prefixed in values) {\r\n      try {\r\n        deserializedValue = provider.schema.deserialize(key, values[prefixed]);\r\n      } catch (err) {\r\n        deserializedValue = deserializedDefault;\r\n      }\r\n    } else {\r\n      deserializedValue = deserializedDefault;\r\n    }\r\n    state[key] = deserializedValue;\r\n    defaults[prefixed] = serializedDefault;\r\n    values[prefixed] = provider.schema.serialize(key, deserializedValue);\r\n  });\r\n  for (const prefixed in defaults) {\r\n    this._defaults[prefixed] = defaults[prefixed];\r\n  }\r\n  provider.callback(state);\r\n};\r\n\r\n/**\r\n * Serialize values with provider serializers where available.\r\n * @param {Object} values Values to be serialized.\r\n * @return {Object} The serialized values.\r\n */\r\nStore.prototype.serialize = function(values) {\r\n  const serialized = {};\r\n  for (let i = 0, ii = this._providers.length; i < ii; ++i) {\r\n    const provider = this._providers[i];\r\n    provider.schema.forEachKey(function(key, prefixed) {\r\n      if (prefixed in values) {\r\n        serialized[prefixed] = provider.schema.serialize(\r\n          key,\r\n          values[prefixed],\r\n          values\r\n        );\r\n      }\r\n    });\r\n  }\r\n  for (const key in values) {\r\n    if (!(key in serialized)) {\r\n      const value = values[key];\r\n      const type = util.typeOf(value);\r\n      const serializer = serializers.get(type);\r\n      serialized[key] = serializer(value);\r\n    }\r\n  }\r\n  return serialized;\r\n};\r\n", "const util = require('./util');\r\n\r\n/**\r\n * Get values from a hash string.\r\n * @param {string} hash The hash string (e.g. '#/foo/bar').\r\n * @return {Object} The string values (e.g. {foo: 'bar'}).\r\n */\r\nfunction deserialize(hash) {\r\n  let zipped;\r\n  if (hash.length > 2) {\r\n    const path = hash.substring(2);\r\n    zipped = path.split('/');\r\n  } else {\r\n    zipped = [];\r\n  }\r\n  return util.unzip(zipped);\r\n}\r\n\r\n/**\r\n * Serialize values for the hash.\r\n * @param {Object} values The values to serialize.\r\n * @return {string} The hash string.\r\n */\r\nfunction serialize(values) {\r\n  let path = '#';\r\n  const parts = util.zip(values);\r\n  if (parts.length > 0) {\r\n    path = '#/' + parts.join('/');\r\n  }\r\n  return path;\r\n}\r\n\r\nexports.deserialize = deserialize;\r\nexports.serialize = serialize;\r\n", "const Store = require('./store').Store;\r\nconst hash = require('./hash');\r\n\r\nlet store;\r\n\r\nfunction reset() {\r\n  if (store) {\r\n    window.removeEventListener('popstate', update);\r\n  }\r\n  window.addEventListener('popstate', update);\r\n  store = new Store(hash.deserialize(location.hash), function(\r\n    values,\r\n    defaults\r\n  ) {\r\n    const nonDefaults = {};\r\n    for (const key in values) {\r\n      if (values[key] !== defaults[key]) {\r\n        nonDefaults[key] = values[key];\r\n      }\r\n    }\r\n    history.pushState(values, '', hash.serialize(nonDefaults));\r\n  });\r\n}\r\n\r\nfunction update() {\r\n  store.update(hash.deserialize(location.hash));\r\n}\r\n\r\n/**\r\n * Register a new state provider.\r\n * @param {Object} config Schema config.\r\n * @param {function(Object)} callback Called immediately with initial state.\r\n * @return {function(Object)} Call this function with any updates to the state.\r\n */\r\nexports.register = function(config, callback) {\r\n  return store.register(config, callback);\r\n};\r\n\r\n/**\r\n * Unregister an existing state provider.\r\n * @param {function(Object)} callback Callback registered by the provider.\r\n */\r\nexports.unregister = function(callback) {\r\n  store.unregister(callback);\r\n};\r\n\r\n/**\r\n * Serialize values as they would be represented in the hash.\r\n * @param {Object} values An object with values to be serialized.\r\n * @return {string} The values as they would be represented in the hash.\r\n */\r\nexports.serialize = function(values) {\r\n  return hash.serialize(store.serialize(values));\r\n};\r\n\r\nexports.reset = reset;\r\n\r\nreset();\r\n", "import hashed from 'hashed';\r\nimport {transform} from 'ol/proj';\r\n\r\nfunction toPrecision(value, precision) {\r\n  const factor = Math.pow(10, precision);\r\n  return (Math.round(value * factor) / factor).toString();\r\n}\r\n\r\nfunction synchronize(map, options) {\r\n  options = options || {};\r\n  let animate;\r\n  if ('animate' in options) {\r\n    animate = options.animate;\r\n  } else {\r\n    animate = {duration: 250};\r\n  }\r\n\r\n  const view = map.getView();\r\n  const projection = view.getProjection().getCode();\r\n\r\n  let zoom, center, rotation;\r\n  if (view.isDef()) {\r\n    zoom = view.getZoom();\r\n    center = view.getCenter();\r\n    rotation = view.getRotation();\r\n  } else {\r\n    const viewport = map.getViewport();\r\n    if (viewport) {\r\n      zoom = Math.LOG2E * Math.log(viewport.clientWidth / 256);\r\n    } else {\r\n      zoom = 0;\r\n    }\r\n    center = [0, 0];\r\n    rotation = 0;\r\n  }\r\n\r\n  const config = {\r\n    center: {\r\n      default: center,\r\n      serialize: function(coord, state) {\r\n        let precision;\r\n        if (state && 'zoom' in state) {\r\n          precision = Math.max(0, Math.ceil(Math.log(state.zoom) / Math.LN2));\r\n        } else {\r\n          precision = 3;\r\n        }\r\n        coord = transform(coord, projection, 'EPSG:4326');\r\n        return (\r\n          toPrecision(coord[0], precision) +\r\n          ',' +\r\n          toPrecision(coord[1], precision)\r\n        );\r\n      },\r\n      deserialize: function(str) {\r\n        const parts = str.split(',');\r\n        if (parts.length !== 2) {\r\n          throw new Error('Expected lon,lat but got ' + str);\r\n        }\r\n        const coord = [parseFloat(parts[0]), parseFloat(parts[1])];\r\n        return transform(coord, 'EPSG:4326', projection);\r\n      }\r\n    },\r\n    zoom: {\r\n      default: zoom,\r\n      serialize: function(value) {\r\n        return toPrecision(value, 1);\r\n      },\r\n      deserialize: Number\r\n    },\r\n    rotation: {\r\n      default: rotation,\r\n      serialize: function(value) {\r\n        return toPrecision(value, 2);\r\n      },\r\n      deserialize: Number\r\n    }\r\n  };\r\n\r\n  function hashHandler(state) {\r\n    if (view.isDef() && animate) {\r\n      view.animate(Object.assign({}, state, animate));\r\n      return;\r\n    }\r\n    if ('center' in state) {\r\n      view.setCenter(state.center);\r\n    }\r\n    if ('zoom' in state) {\r\n      view.setZoom(state.zoom);\r\n    }\r\n    if ('rotation' in state) {\r\n      view.setRotation(state.rotation);\r\n    }\r\n  }\r\n\r\n  const update = hashed.register(config, hashHandler);\r\n\r\n  function onMoveEnd() {\r\n    update({\r\n      center: view.getCenter(),\r\n      zoom: view.getZoom(),\r\n      rotation: view.getRotation()\r\n    });\r\n  }\r\n\r\n  map.on('moveend', onMoveEnd);\r\n\r\n  return function unregister() {\r\n    map.un('moveend', onMoveEnd);\r\n    hashed.unregister(hashHandler);\r\n  };\r\n}\r\n\r\nexport default synchronize;\r\n"],
  "mappings": "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",
  "names": ["hashed"]
}
